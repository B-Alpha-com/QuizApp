{"version":3,"sources":["Component/Array.js","Component/QuizUi.js","Component/Score.js","Component/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Questions","id","question","Options","a","b","c","d","e","Answer","Quiz","index","onclick","handleInput","count","previous","isShowing","onclickSubmit","colorChange","className","type","name","onInput","value","onClick","Score","total","questions","Header","Number","map","number","PresentQuestionBg","NewIndex","style","backgroundColor","App","handleNext","SelectedAnswer","state","newCount","preventDefault","setState","newScore","correctAnswer","handlePrevious","control","handleSubmit","target","totalQuestion","length","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a4851cf.chunk.js","sourcesContent":["export const Questions = [\n  {\n    id: 1,\n    question: \"who is the present president of the United State of America\",\n    Options: {\n      a: \"Donald Trump\",\n      b: \"Ronald Reagan\",\n      c: \"Ibrahamovic\",\n      d: \"Richard Olando\",\n      e: \"Joseph Biden\",\n    },\n    Answer: \"Joseph Biden\",\n  },\n  {\n    id: 2,\n    question: \"who is the present president of Federal Republic of Nigeria\",\n    Options: {\n      a: \"Donald Trump\",\n      b: \"Ronald Reagan\",\n      c: \"Muhammad Buhari\",\n      d: \"Richard Olando\",\n      e: \"Joseph Biden\",\n    },\n    Answer: \"Muhammad Buhari\",\n  },\n  {\n    id: 3,\n    question: \"who is the present president of Ghana\",\n    Options: {\n      a: \"Akufo Addo\",\n      b: \"Ronald Reagan\",\n      c: \"Ibrahamovic\",\n      d: \"Richard Olando\",\n      e: \"Joseph Biden\",\n    },\n    Answer: \"Akufo Addo\",\n  },\n];\nexport const Numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n","import React from \"react\";\nimport { Questions } from \"./Array\";\n\nconst Quiz = ({\n  index,\n  onclick,\n  handleInput,\n  count,\n  previous,\n  isShowing,\n  onclickSubmit,\n  colorChange,\n}) => {\n  return (\n    <div className=\"master_div\">\n      <div>\n        <h1 className=\"h1\">Choose the correct Answer</h1>\n      </div>\n      <div>\n        <p className=\"questionHead-tag\">\n          Question <span>{count}</span>\n        </p>\n      </div>\n      <div>\n        <p className=\"question-tag\">{Questions[index].question}</p>\n      </div>\n      <div className=\"options-div\">\n        <ul className=\"ul-list\">\n          <li>\n            <input\n              type=\"radio\"\n              name=\"option1\"\n              onInput={handleInput}\n              value={Questions[index].Options.a}\n            />\n            <span className=\"option-a\">{Questions[index].Options.a}</span>\n          </li>\n          <li>\n            <input\n              type=\"radio\"\n              name=\"option2\"\n              onInput={handleInput}\n              value={Questions[index].Options.b}\n            />\n            <span className=\"option-b\">{Questions[index].Options.b}</span>\n          </li>\n          <li>\n            <input\n              type=\"radio\"\n              name=\"option3\"\n              onInput={handleInput}\n              value={Questions[index].Options.c}\n            />\n            <span className=\"option-c\">{Questions[index].Options.c}</span>\n          </li>\n          <li>\n            <input\n              type=\"radio\"\n              name=\"option4\"\n              onInput={handleInput}\n              value={Questions[index].Options.d}\n            />\n            <span className=\"option-d\">{Questions[index].Options.d}</span>\n          </li>\n          <li>\n            <input\n              type=\"radio\"\n              name=\"option5\"\n              onInput={handleInput}\n              value={Questions[index].Options.e}\n            />\n            <span className=\"option-e\">{Questions[index].Options.e}</span>\n          </li>\n        </ul>\n      </div>\n      <div className=\"button-div\">\n        <button\n          className={!isShowing ? \"previous-btn\" : \"previous-btn1\"}\n          type=\"button\"\n          onClick={previous}\n        >\n          Previous\n        </button>\n        <button className=\"next-btn\" type=\"submit\" onClick={onclick}>\n          Next\n        </button>\n      </div>\n      <div className=\"submit-div\">\n        <button className=\"submit-btn\" type=\"submit\" onClick={onclickSubmit}>\n          Submit\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Quiz;\n","import React from \"react\";\n\nconst Score = ({ total, questions }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"drawer\">\n        <p className=\"text\">\n          You have Answered correctly:<span>{total}</span>/\n          <span>{questions}</span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Score;\n","import React from \"react\";\nimport { Questions } from \"./Array\";\nimport { ImDroplet } from \"react-icons/im\";\n\nconst Header = ({ count, colorChange }) => {\n  const Number = Questions.map((number, index) => {\n    let PresentQuestionBg = \"\";\n    const NewIndex = index + 1;\n    if (NewIndex === count) {\n      PresentQuestionBg = \"red\";\n    }\n    return (\n      <button\n        key={index}\n        type=\"button\"\n        style={{ backgroundColor: PresentQuestionBg }}\n      >\n        <i>\n          <ImDroplet className={colorChange ? \"icon1\" : \"icon2\"} />\n          Question{NewIndex}\n        </i>\n      </button>\n    );\n  });\n  return (\n    <div>\n      <div className=\"header-div\">{Number}</div>\n    </div>\n  );\n};\n\nexport default Header;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Quiz from \"./Component/QuizUi\";\nimport Score from \"./Component/Score\";\nimport { Questions } from \"./Component/Array\";\nimport Header from \"./Component/Header\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      index: 0,\n      control: true,\n      SelectedAnswer: \"\",\n      correctAnswer: 0,\n      count: 1,\n      isShowing: false,\n      colorChange: true,\n    };\n  }\n  handleNext = (e) => {\n    const SelectedAnswer = this.state.SelectedAnswer;\n    const Answer = Questions[this.state.index].Answer;\n    const newCount = this.state.count + 1;\n    e.preventDefault();\n    if (this.state.index !== 2) {\n      this.setState({ index: this.state.index + 1 });\n    }\n    if (SelectedAnswer === Answer) {\n      const newScore = this.state.correctAnswer + 1;\n      this.setState({ correctAnswer: newScore });\n    }\n    if (this.state.index !== 2) {\n      this.setState({ count: newCount, isShowing: true });\n    }\n  };\n  handlePrevious = (e) => {\n    const SelectedAnswer = this.state.SelectedAnswer;\n    const Answer = Questions[this.state.index].Answer;\n    const newCount = this.state.count - 1;\n    e.preventDefault();\n    if (this.state.index > 0) {\n      this.setState({ index: this.state.index - 1 });\n    } else if (this.state.index === 2) {\n      this.setState({ control: false });\n    }\n    if (SelectedAnswer === Answer) {\n      const newScore = this.state.correctAnswer - 1;\n      this.setState({ correctAnswer: newScore });\n    }\n    if (this.state.count !== 1) {\n      this.setState({ count: newCount });\n    }\n    if (this.state.count === 2) {\n      this.setState({ isShowing: false });\n    }\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.setState({ control: false });\n  };\n\n  handleInput = (e) => {\n    this.setState({ SelectedAnswer: e.target.value, colorChange: false });\n  };\n\n  render() {\n    const totalQuestion = Questions.length;\n    const {\n      isShowing,\n      index,\n      control,\n      correctAnswer,\n      count,\n      colorChange,\n    } = this.state;\n    const { handleInput, handlePrevious, handleNext, handleSubmit } = this;\n    return control ? (\n      <div className=\"App\">\n        <Header count={count} colorChange={colorChange} />\n        <Quiz\n          index={index}\n          onclick={handleNext}\n          onclickSubmit={handleSubmit}\n          handleInput={handleInput}\n          count={count}\n          previous={handlePrevious}\n          isShowing={isShowing}\n        />\n      </div>\n    ) : (\n      <Score total={correctAnswer} questions={totalQuestion} />\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}